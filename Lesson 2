# example STRINGS 
x = "Time's running out"
name = "Mike"
# using the '+' operon to combine strings doesn't include spaces.
warning = x + " " + name
print(warning)
echo = x + (" " + name)*3
print(echo)

# example OUTPUT
b = 27
print(b)
print(b*3)
# when you sign a variable as a string (even if it is a number), the '*' operon will treat the number as a string and repeat.
b_str = str(b)
print(b_str)
print(b_str*3)

# example INPUT
numprompt = input("What's you're favourite number? ") #note: adding the space makes it look cleaner on the console.
print (5 * numprompt) 
# input() always returns a string, so for arithmatic you want to assign the string as an int.
numprompt = int(numprompt)
print (5 * numprompt)

# example CONDITIONALS/ BRANCHING
x = float(input("Enter a value for x: "))
y = float(input("Enter a value for y: "))
# note the identation, this organises the flow of order the code is read in. E.g: if the first 'if' is false it skips the rest of the indented code underneath.
if x == y:
   print("x and y are equal")
   if y != 0: #ensures nothing is x/0 because this crashes python
       print("therefore, x / y is", x/y) #thus, this will always print 1.0
elif x < y: #elif means else if
   print("x is smaller than y")
elif x > y:
   print("x is bigger than y")
print("thanks!")

# example REMAINDER
# '%' is the modulus operon which gives the remainder of a division.
prompt = int(input("Enter a number: "))
if num % 2 == 0:
   print("number is even")
else: 
   print("number is odd")

# example WHILE LOOPS
# indentation incredibly important for this mini-game to control the order of flow.
count = 0   
n = input("You are in the Lost Forest\n****************\n****************\n :)\n****************\n****************\nGo left or right? ")
while True: # while loops, loop the indented code beneath until it is broken by speicifc requirements.
    if n == "left" or n == "Left":
        print("\nYou got out of the Lost Forest!\n\\o/")
        break 
    elif n == "right" or n == "Right":
        count += 1
        if count <= 5:
            input("You are in the Lost Forest\n****************\n*************\n :( \n****************\n****************\nGo left or right? ")
        if count >= 5:
            input("You are in the Lost Forest\n****************\n****************\n >:( \n****************\n****************\nGo left or right? ")
        if count >= 10:
            print("You are stuck the Lost Forest\n****************\n****************\n (╯°□°）╯︵ ┻━┻ \n****************\n****************\nGame Over")
            break    
    else:
        n = input("You stay still. Try again: ")

# example FOR LOOPS
mysum = 0
for i in range(10): # 'for' is a loop statement and 'i' is the loop variable
   mysum += i # shorthand for mysum = mysum + i 
print(mysum)

mysum = 0
for i in range(7, 10): # range between 7 and 10.
   mysum += i
print(mysum)

mysum = 0
for i in range(5, 11, 2): # range between 5 and 11, with step 2.
   mysum += i
print(mysum)

# example PERFECT SQUARES
ans = 0
neg_flag = False 
x = int(input("Enter an integer: ")) # assigns string as an int so it is treated as a number for arithmetic
if x < 0:
   neg_flag = True
while ans**2 < x:
   ans = ans + 1 # this loop runs integers 0, 1, 2, 3... **2 with a step +1 to see if the inputed integer is a perfect square.
if ans**2 == x:
   print("Square root of", x, "is", ans)
else:
   print(x, "is not a perfect square")
   if neg_flag:
       print("Just checking... did you mean", -x, "?")
